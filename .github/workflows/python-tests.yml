name: Python package

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:

    runs-on: ubuntu-latest

    services:
      db_service:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432


    steps:
    - uses: actions/checkout@v2

    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1

    - name: Cache Pipenv virtualenv
      uses: actions/cache@v1
      id: pipenv-cache
      with:
        path: ~/.pipenv
        key: ${{ runner.os }}-pipenv-v2-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-v2-

    - name: Install dependencies
      env:
        PIPENV_NOSPIN: 'true'
        WORKON_HOME: ~/.pipenv/virtualenvs
        PIPENV_CACHE_DIR: ~/.pipenv/pipcache
      if: steps.pipenv-cache.outputs.cache-hit != 'true'
      run: pipenv install --dev

    - name: black - formatting
      run: |
        pipenv run black uobtheatre 

    - name: pytest - check tests pass and coverage is above 90%
      run: |
        pipenv run pytest
      env:
        DATABASE_URL: postgres://postgres:postgres@0.0.0.0:5432/postgres
