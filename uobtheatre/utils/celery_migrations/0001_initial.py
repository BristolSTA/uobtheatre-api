# Generated by Django 3.2.11 on 2022-01-21 11:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChordCounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(help_text='Celery ID for the Chord header group', max_length=255, unique=True, verbose_name='Group ID')),
                ('sub_tasks', models.TextField(help_text='JSON serialized list of task result tuples. use .group_result() to decode')),
                ('count', models.PositiveIntegerField(help_text='Starts at len(chord header) and decrements after each task is finished')),
            ],
        ),
        migrations.CreateModel(
            name='GroupResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(help_text='Celery ID for the Group that was run', max_length=255, unique=True, verbose_name='Group ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Datetime field when the group result was created in UTC', verbose_name='Created DateTime')),
                ('date_done', models.DateTimeField(auto_now=True, help_text='Datetime field when the group was completed in UTC', verbose_name='Completed DateTime')),
                ('content_type', models.CharField(help_text='Content type of the result data', max_length=128, verbose_name='Result Content Type')),
                ('content_encoding', models.CharField(help_text='The encoding used to save the task result data', max_length=64, verbose_name='Result Encoding')),
                ('result', models.TextField(default=None, editable=False, help_text='The data returned by the task.  Use content_encoding and content_type fields to read.', null=True, verbose_name='Result Data')),
            ],
            options={
                'verbose_name': 'group result',
                'verbose_name_plural': 'group results',
                'ordering': ['-date_done'],
            },
        ),
        migrations.CreateModel(
            name='TaskResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(help_text='Celery ID for the Task that was run', max_length=255, unique=True, verbose_name='Task ID')),
                ('task_name', models.CharField(help_text='Name of the Task which was run', max_length=255, null=True, verbose_name='Task Name')),
                ('task_args', models.TextField(help_text='JSON representation of the positional arguments used with the task', null=True, verbose_name='Task Positional Arguments')),
                ('task_kwargs', models.TextField(help_text='JSON representation of the named arguments used with the task', null=True, verbose_name='Task Named Arguments')),
                ('status', models.CharField(choices=[('FAILURE', 'FAILURE'), ('PENDING', 'PENDING'), ('RECEIVED', 'RECEIVED'), ('RETRY', 'RETRY'), ('REVOKED', 'REVOKED'), ('SKIPPED', 'SKIPPED'), ('STARTED', 'STARTED'), ('SUCCESS', 'SUCCESS')], default='PENDING', help_text='Current state of the task being run', max_length=50, verbose_name='Task State')),
                ('worker', models.CharField(default=None, help_text='Worker that executes the task', max_length=100, null=True, verbose_name='Worker')),
                ('content_type', models.CharField(help_text='Content type of the result data', max_length=128, verbose_name='Result Content Type')),
                ('content_encoding', models.CharField(help_text='The encoding used to save the task result data', max_length=64, verbose_name='Result Encoding')),
                ('result', models.TextField(default=None, editable=False, help_text='The data returned by the task.  Use content_encoding and content_type fields to read.', null=True, verbose_name='Result Data')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Datetime field when the task result was created in UTC', verbose_name='Created DateTime')),
                ('date_done', models.DateTimeField(auto_now=True, help_text='Datetime field when the task was completed in UTC', verbose_name='Completed DateTime')),
                ('traceback', models.TextField(blank=True, help_text='Text of the traceback if the task generated one', null=True, verbose_name='Traceback')),
                ('meta', models.TextField(default=None, editable=False, help_text='JSON meta information about the task, such as information on child tasks', null=True, verbose_name='Task Meta Information')),
            ],
            options={
                'verbose_name': 'task result',
                'verbose_name_plural': 'task results',
                'ordering': ['-date_done'],
            },
        ),
        migrations.AddIndex(
            model_name='taskresult',
            index=models.Index(fields=['task_name'], name='django_cele_task_na_08aec9_idx'),
        ),
        migrations.AddIndex(
            model_name='taskresult',
            index=models.Index(fields=['status'], name='django_cele_status_9b6201_idx'),
        ),
        migrations.AddIndex(
            model_name='taskresult',
            index=models.Index(fields=['worker'], name='django_cele_worker_d54dd8_idx'),
        ),
        migrations.AddIndex(
            model_name='taskresult',
            index=models.Index(fields=['date_created'], name='django_cele_date_cr_f04a50_idx'),
        ),
        migrations.AddIndex(
            model_name='taskresult',
            index=models.Index(fields=['date_done'], name='django_cele_date_do_f59aad_idx'),
        ),
        migrations.AddIndex(
            model_name='groupresult',
            index=models.Index(fields=['date_created'], name='django_cele_date_cr_bd6c1d_idx'),
        ),
        migrations.AddIndex(
            model_name='groupresult',
            index=models.Index(fields=['date_done'], name='django_cele_date_do_caae0e_idx'),
        ),
    ]
